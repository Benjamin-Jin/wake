def version_h _ =
  def cmdline = [which "git", "describe", "--tags", "--dirty"]
  def git = volatileJob cmdline [] (\_ [])
  def body = "#define VERSION {git.getJobStdout}"
  write "{here}/version.h" body

def pkg name = match (pkgConfig name)
  Some x = x
  None   = makeCPackage "" | editCPackageLFlags ("-l{name}", _)

global def buildWake (Pair variant clib) =
  def internalDeps = map (_ clib) [utf8proc, gopt]
  def externalDeps = map pkg ["sqlite3", "ncurses", "gmp", "re2"]
  def deps = internalDeps ++ externalDeps | flattenCPackages
  def reFiles = sources here '.*\.re'
  def headerFiles = version_h 0, deps.getCPackageHeaders ++ sources here '.*\.h'
  def cppFiles = map re2c reFiles ++ sources here '.*\.cpp'
  def compile = compileC variant deps.getCPackageCFlags headerFiles
  def objFiles = map compile cppFiles ++ deps.getCPackageObjects
  linkO variant deps.getCPackageLFlags objFiles "bin/wake"
