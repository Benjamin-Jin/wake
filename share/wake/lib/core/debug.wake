# Copyright 2019 SiFive, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You should have received a copy of LICENSE.Apache2 along with
# this software. If not, you may obtain a copy at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Any => String conversion
global def format any = prim "format"

# Print any type to stdout; even exceptions
global def print    str = prim "print"
global def println  str = print (str, "\n", Nil).cat

# Wait for the top of a value to be made available, then run (f x)
# Eg: x = 1, 2, 3, Nil; waitOne f x waits for ',' to be known vs. Nil
global def waitOne f x =
  def wait x = prim "wait_one"
  match (wait x)
    Unit = f x

# Wait for all of a value to be made available, then run (f x)
# Eg: x = 1, 2, 3, Nil; waitAll f x waits for all the values 1-3 to be known
global def waitAll f x =
  def wait x = prim "wait_all"
  match (wait x)
    Unit = f x
