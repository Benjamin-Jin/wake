# Copyright 2019 SiFive, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You should have received a copy of LICENSE.Apache2 along with
# this software. If not, you may obtain a copy at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# unit / void
global data Unit = Unit

# Creates a ``Pair``, a tuple containing two elements.
global tuple Pair a b =
  global First:  a
  global Second: b

# Defines an arrow operator as an alternate way to initialize a ``Pair``.
global def x â†’ y = Pair x y

# Creates a ``Triple``, a tuple containing three elements.
global tuple Triple a b c =
  global First:  a
  global Second: b
  global Third:  c

# Variable length Tuples (terminate with Unit)
# Examples:
#   def tuple = (1,, "xx",, 1e8,, Unit)
#   def (x,, y,, z,, Unit) = tuple
#   def _ = println (str tuple._0)
#   def _ = println (dstr tuple._2)
global data a,, b = a,, b

# Handy accessor methods
global def _0 (x,, _) = x
global def _1 (_,, x,, _) = x
global def _2 (_,, _,, x,, _) = x
global def _3 (_,, _,, _,, x,, _) = x
global def _4 (_,, _,, _,, _,, x,, _) = x
global def _5 (_,, _,, _,, _,, _,, x,, _) = x
global def _6 (_,, _,, _,, _,, _,, _,, x,, _) = x
global def _7 (_,, _,, _,, _,, _,, _,, _,, x,, _) = x
global def _8 (_,, _,, _,, _,, _,, _,, _,, _,, x,, _) = x
global def _9 (_,, _,, _,, _,, _,, _,, _,, _,, _,, x,, _) = x
