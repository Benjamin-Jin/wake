# bools
def true  x y = x
def false x y = y
def ~x = x false true
def x && y = x y x
def x || y = x x y

# tuples
def pair x y f = f x y
def first  p = p true
def second p = p false

# lists
def x, y = pair x y
def nil x = true
def empty l = l (\x \y false)

# list operations

def last default l =
  def then _ = default
  def else _ = last (first l) (second l)
  empty l then else ""

def foldl f a l =
  def then _ = a
  def else _ = foldl f (f a (first l)) (second l)
  empty l then else ""

def scanl f a l =
  def then _ = nil
  def else _ = scanl f (f a (first l)) (second l)
  a, empty l then else ""

def foldr f a l =
  def then _ = a
  def else _ = f (first l) (foldr f a (second l))
  empty l then else ""

def scanr f a l =
  def then = a, nil
  def else = \r (f (first l) (first r), r) (scanr f a (second l))
  empty l then else ""

def map f l =
  def then _ = nil
  def else _ = f (first l), map f (second l)
  empty l then else ""

# string operations
def x ++ y = prim "strcat"

# integer operations
def x + y = prim "add"
def x - y = prim "sub"
def x * y = prim "mul"
def x / y = prim "div"
def x % y = prim "mod"
def x << y = prim "shl"
def x >> y = prim "shr"
def x ^ y = prim "exp"
def root x n = prim "root"
def xor x y = prim "xor"
def and x y = prim "and"
def or  x y = prim "or"
def gcd x y = prim "gcd"
def lcm x y = prim "lcm"
def str x y = prim "str"
def powm x y m = prim "powm"

# comparisons ... < > <= >= == != ... what to return? need to build True/False in C++
