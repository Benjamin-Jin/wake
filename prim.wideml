# bools
def true  x y = x
def false x y = y
def ~x = x false true
def x && y = x y x
def x || y = x x y

# tuples
def pair x y f = f x y
def first  p = p true
def second p = p false

# lists
def x, y = pair x y
def nil x = true
def empty l = l (\x \y false)

# list operations
def last    x l = if empty l then x else last (first l) (second l)
def foldl f a l =     if empty l then a   else foldl f (f a (first l)) (second l)
def scanl f a l = a, (if empty l then nil else scanl f (f a (first l)) (second l))
def foldr f a l =     if empty l then a   else f (first l) (foldr f a (second l))
def scanr f a l = if empty l then a, nil else \r (f (first l) (first r), r) (scanr f a (second l))
def map   f   l = if empty l then nil else f (first l), map f (second l)

# string operations
def x ++ y = prim "strcat"

# integer operations
def x + y = prim "add"
def x - y = prim "sub"
def x * y = prim "mul"
def x / y = prim "div"
def x % y = prim "mod"
def x << y = prim "shl"
def x >> y = prim "shr"
def x ^ y = prim "exp"
def root x n = prim "root"
def xor x y = prim "xor"
def and x y = prim "and"
def or  x y = prim "or"
def gcd x y = prim "gcd"
def lcm x y = prim "lcm"
def str x y = prim "str"
def powm x y m = prim "powm"

# Comparison operators for integers and strings
def x <  y = prim "lt"
def x >  y = y < x
def x >= y = ~(x < y)
def x <= y = ~(y < x)
def x == y = prim "eq"
def x != y = ~(x == y)
